#!/usr/bin/env ruby

require 'yaml'
require 'fileutils'
require 'open3'

QUERY = ARGV.first
ARGS  = ARGV[1..-1]

GU_CONFIG_PATH = ENV['HOME'] + '/.gituser'

gituser = YAML.load_file(GU_CONFIG_PATH)
label = ARGS.first
$config = {
  :affect_git_hooks => true
}

def update_pre_push_script(label)
  hook_script_path = ".git/hooks/pre-push"
  git_user_script_path = "/usr/local/bin/git-user"
  hook_sentence = "#{git_user_script_path} switch #{label}"

  unless File.exist?(hook_script_path)
    FileUtils.touch(hook_script_path)
    FileUtils.chmod(0755, hook_script_path)
  end

  hook_script_content = File.open(hook_script_path).read
  exist = hook_script_content.split(/\r?\n/).any? do |line|
    line.include?(git_user_script_path)
  end

  File.open(hook_script_path, 'w') do |f|
    if exist
      # Replace line
      f.write hook_script_content.gsub(%r|#{git_user_script_path} switch .+|, hook_sentence)
    else
      # Add line
      f.puts hook_sentence
    end
  end

end

def list_user
  if Dir.exist? '.git'
    puts "Current repo's config:"
    git_author_name = `git config --local user.name`.strip
    git_author_email = `git config --local user.email`.strip
    puts "   name\t#{git_author_name}"
    puts "   email\t#{git_author_email}"

  end
  puts "List of users:"
  gituser.each do |key, value|
    puts "   [#{key}]"
    value.each do |element, content|
      puts "      #{element}\t#{content}"
    end
  end
end

def switch_user(label, user)
  # Git
  if Dir.exist? '.git'
    # Git config -> name, email
    Open3.capture3 %|git config --local user.name "#{user['name']}"|
    Open3.capture3 %|git config --local user.email "#{user['email']}"|

    # Git hooks
    if $config[:affect_git_hooks]
      update_pre_push_script(label)
    end
  end

  # Git config -> private key
  if user['private_key']
    private_key_path = "#{ENV['HOME']}/.ssh/#{user['private_key']}"
    Open3.capture3 %|ssh-add -D|
    Open3.capture3 %|ssh-add #{private_key_path}|
    Open3.capture3 %|git config --local remote.origin.gtprivatekeypath #{private_key_path}|
  end

  # Export github credentials
  if user['github']
    gh_user = user['github']
    system %|export GITHUB_USER="#{gh_user['user']}"|
    system %|export GITHUB_PASSWORD="#{gh_user['token']}"|
  end


  puts "Switched user to <#{user['name']}>"
  puts "   - Local git config" if Dir.exist?('.git')
  puts "   - Local git private key" if user['private_key']
  puts "   - Export Github credentials" if user['github']
end

case QUERY
when 'list'
  list_user
when 'ls'
  list_user
when 'switch'
  switch_user(label, gituser[label])
when 'sw'
  switch_user(label, gituser[label])
when 'hooks'
  puts "Update .git/hooks/pre-push"
  update_pre_push_script(label)
when 'help'
  puts <<-EOS
    Usage:
      git user list\t\tlist all 'users'
      git user ls\t\talias to 'list'
      git user switch <user>\tswitch user
      git user sw <user>\talias to 'switch'
      git user hooks <user>\tSetup hook script for current git repository
      git user help\t\tshow this help
  EOS
else
  puts "Usage: git user <command> [<args>]"
end
